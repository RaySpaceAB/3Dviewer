{"version":3,"sources":["test/spec/index.spec.js"],"names":["promised","require","expect","use","logs","mocks","describe","browserConsole","browserLogs","beforeEach","store","console","browser","it","verify","to","eventually","be","fulfilled","error","rejectedWith","warn","ignore","message","level","name","info","debug","log","ERROR","WARNING","INFO","DEBUG","LOG","or","havingLetter","letter","indexOf","and","reset","firefox","then"],"mappings":"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","file":"index.spec.js","sourcesContent":["\nconst promised = require('chai-as-promised');\nconst expect   = require('chai').use(promised).expect;\nconst logs     = require('../../index');\nconst mocks    = require('./mocks');\n\n\ndescribe('Browser Logs', () => {\n\n  var browserConsole, browserLogs;\n\n  beforeEach(() => {\n    var store = [];\n    browserConsole = mocks.console(store);\n    browserLogs = logs(mocks.browser(store, 'chrome'));\n  });\n\n  it('should not fail if console is empty', () => {\n    return expect(browserLogs.verify()).to.eventually.be.fulfilled;\n  });\n\n  it('should fail if there is at least a single message', () => {\n    browserConsole.error('Oops!');\n    return expect(browserLogs.verify()).to.eventually.be.rejectedWith(\n      'UNEXPECTED MESSAGE: {\"level\":\"SEVERE\",\"message\":\"Oops!\"}');\n  });\n\n  it('should fail on first message, even if there are more messages', () => {\n    browserConsole.error('Oops!');\n    browserConsole.warn('Oops!');\n    return expect(browserLogs.verify()).to.eventually.be.rejectedWith(\n      'UNEXPECTED MESSAGE: {\"level\":\"SEVERE\",\"message\":\"Oops!\"}');\n  });\n\n  it('should allow ignoring the messages', () => {\n    browserConsole.error('Oops!');\n    browserLogs.ignore(() => { return true; });\n    return expect(browserLogs.verify()).to.eventually.be.fulfilled;\n  });\n\n  it('should allow ignoring the specific messages only', () => {\n    browserConsole.error('Oops!');\n    browserConsole.warn('Oops!');\n    browserLogs.ignore((message) => { return message.level.name === 'SEVERE'; });\n    return expect(browserLogs.verify()).to.eventually.be.rejectedWith(\n      'UNEXPECTED MESSAGE: {\"level\":\"WARNING\",\"message\":\"Oops!\"}');\n  });\n\n  it('should have predefined ignore functions', () => {\n    browserConsole.error('Oops!');\n    browserConsole.warn('Oops!');\n    browserConsole.info('Oops!');\n    browserConsole.debug('Oops!');\n    browserConsole.log('Oops!');\n    browserLogs.ignore(browserLogs.ERROR);\n    browserLogs.ignore(browserLogs.WARNING);\n    browserLogs.ignore(browserLogs.INFO);\n    browserLogs.ignore(browserLogs.DEBUG);\n    browserLogs.ignore(browserLogs.LOG);\n    return expect(browserLogs.verify()).to.eventually.be.fulfilled;\n  });\n\n  it('should allow using \"or\" helper function', () => {\n    browserConsole.error('Oops!');\n    browserConsole.warn('Oops!');\n    browserLogs.ignore(browserLogs.or(browserLogs.ERROR, browserLogs.WARNING));\n    return expect(browserLogs.verify()).to.eventually.be.fulfilled;\n  });\n\n  it('should allow using \"and\" helper function', () => {\n    function havingLetter(letter) {\n      return message => message.message.indexOf(letter) !== -1;\n    }\n    browserConsole.error('Oops!');\n    browserLogs.ignore(browserLogs.and(havingLetter('O'), havingLetter('!')));\n    return expect(browserLogs.verify()).to.eventually.be.fulfilled;\n  });\n\n  it('should allow ignoring the strings', () => {\n    browserConsole.error('This is a very long error');\n    browserLogs.ignore('very long');\n    return expect(browserLogs.verify()).to.eventually.be.fulfilled;\n  });\n\n  it('should allow ignoring the strings only using the case sensitivity', () => {\n    browserConsole.error('This is a very long error');\n    browserLogs.ignore('VERY LONG');\n    return expect(browserLogs.verify()).to.eventually.be.rejectedWith(\n      'UNEXPECTED MESSAGE: {\"level\":\"SEVERE\",\"message\":\"This is a very long error\"}');\n  });\n\n  it('should allow ignoring regular expressions', () => {\n    browserConsole.error('Oops!');\n    browserLogs.ignore(/oops/ig);\n    return expect(browserLogs.verify()).to.eventually.be.fulfilled;\n  });\n\n  it('should allow setting expectations', () => {\n    browserLogs.expect('Oops!');\n    return expect(browserLogs.verify()).to.eventually.be.rejectedWith('NO MESSAGE TO EXPECT');\n  });\n\n  it('should allow expecting a sequence', () => {\n    browserLogs.expect('a');\n    browserLogs.expect('b');\n    browserConsole.log('a');\n    browserConsole.log('b');\n    return expect(browserLogs.verify()).to.eventually.be.fulfilled;\n  });\n\n  it('should fail if expectation sequence doesnt match', () => {\n    browserLogs.expect('b');\n    browserLogs.expect('a');\n    browserConsole.log('a');\n    browserConsole.log('b');\n    return expect(browserLogs.verify()).to.eventually.be.rejectedWith(\n      'UNEXPECTED MESSAGE: {\"level\":\"INFO\",\"message\":\"a\"}');\n  });\n\n  it('should allow reseting the ignores and expections', () => {\n    browserLogs.expect('a');\n    browserLogs.expect('b');\n    browserLogs.reset();\n    return expect(browserLogs.verify()).to.eventually.be.fulfilled;\n  });\n\n  it('should work only with chrome browser', () => {\n    var firefox = logs(mocks.browser([], 'firefox'));\n    firefox.expect('Oops!');\n    return expect(firefox.verify()).to.eventually.be.fulfilled;\n  });\n\n  it('should fail if expectation is being ignored', () => {\n    browserLogs.expect('a');\n    browserLogs.ignore('a');\n    browserConsole.error('a');\n    expect(browserLogs.verify()).to.eventually.be.rejectedWith('NO MESSAGE TO EXPECT');\n  });\n\n  it('should not fail calling verify multiple times', () => {\n    browserLogs.expect('a');\n    browserConsole.error('a');\n    browserLogs.verify().then(() => browserLogs.verify());\n  });\n\n});\n"]}