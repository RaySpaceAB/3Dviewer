{"version":3,"sources":["index.js"],"names":["or","a","b","message","and","byLevel","expectedLevel","level","name","byText","text","indexOf","byRegExp","re","match","zip","length","map","x","i","matcherFor","args","matchers","arg","RegExp","every","curr","removeMatching","messages","filters","filter","module","exports","browser","options","ignores","expects","log","logs","manage","get","then","result","concat","reset","ERROR","WARNING","DEBUG","INFO","LOG","ignore","push","expect","verify","getCapabilities","cap","reporters","forEach","reporter","expected","actual","Error","JSON","stringify"],"mappings":"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","file":"index.js","sourcesContent":["\nfunction or(a, b) {\n  return message => a(message) || b(message);\n}\n\nfunction and(a, b) {\n  return message => a(message) && b(message);\n}\n\nfunction byLevel(expectedLevel) {\n  return message => message.level.name === expectedLevel;\n}\n\nfunction byText(text) {\n  return message => message.message.indexOf(text) !== -1;\n}\n\nfunction byRegExp(re) {\n  return message => message.message.match(re);\n}\n\nfunction zip(a, b) {\n  return (a.length > b.length ? a : b).map((x, i) => [a[i], b[i]]);\n}\n\nfunction matcherFor(args) {\n  let matchers = args.map(arg => {\n    if (typeof arg === 'string') {\n      return byText(arg);\n    } else if (arg instanceof RegExp) {\n      return byRegExp(arg);\n    } else {\n      return arg;\n    }\n  });\n  return message => matchers.every(curr => curr(message));\n}\n\nfunction removeMatching(messages, filters) {\n  return messages.filter(message => {\n    return filters.filter(filter => filter(message)).length === 0;\n  });\n}\n\nmodule.exports = function (browser, options) {\n  let ignores, expects, log;\n\n  function logs() {\n    return browser.manage().logs().get('browser').then(function (result) {\n      log = log.concat(result);\n      return log;\n    });\n  }\n\n  function reset() {\n    ignores = [];\n    expects = [];\n    log     = [];\n  }\n\n  reset();\n\n  return {\n    ERROR:   byLevel('SEVERE'),\n    WARNING: byLevel('WARNING'),\n    DEBUG:   byLevel('DEBUG'),\n    INFO:    byLevel('INFO'),\n    LOG:     byLevel('INFO'),\n\n    or,\n    and,\n    reset,\n\n    ignore: (...args) => ignores.push(matcherFor(args)),\n    expect: (...args) => expects.push(matcherFor(args)),\n\n    verify: () => browser.getCapabilities().then(cap => {\n      if (cap.get('browserName') === 'chrome') {\n        return logs().then(messages => {\n          ((options || {}).reporters || []).forEach(reporter => {\n            reporter(messages);\n          });\n          zip(expects, removeMatching(messages, ignores)).forEach(([expected, actual]) => {\n            if (!actual) {\n              throw new Error('NO MESSAGE TO EXPECT');\n            }\n            if (!expected || !expected(actual)) {\n              throw new Error('UNEXPECTED MESSAGE: ' + JSON.stringify({\n                level: actual.level.name,\n                message: actual.message\n              }));\n            }\n          });\n        });\n      }\n    })\n  };\n};\n"]}